{"name":"Frontend developer guide","tagline":"a quick-start guide for frontend developement","body":"# A Guide to Learning Frontend Development\r\n\r\nHello, and welcome to the wonderful world of frontend development.  This guide\r\nis designed to help you get up to speed as quickly as possible.\r\n\r\n# Introduction\r\n\r\nThis guide will walk you through the basics of frontend development.  We will\r\ncover writing page markup, styling, and scripting.  We will also talk about\r\nseparating concerns, commone patterns, and introduce you to useful libraries\r\nand tools.\r\n\r\n## How to use this guide\r\n\r\nThe concepts presented in each of the resources below build upon one another,\r\nso I recommend you follow the material linearly.  As of this writing, this is\r\nbasically a reading list.  I plan to add some tests and example projects at\r\nsome point.\r\n\r\n## Prerequisites\r\n\r\nIt is assumed that you have some background in programming, and have at least \r\ncursory knowledge of web browsers, servers, HTTP, the request/response cycle.\r\n\r\n### Software engineering practices\r\n\r\nYou will need to use good software engineering &amp; craftsmanship when doing\r\nfrontend development, at least as much as you need to when programming\r\nanything else.  All too often, best practices are left by the wayside when it\r\ncomes to the frontend; code quality gets neglected, concerns bleed together,\r\nthe codebase becomes unmaintainable, and developers dread working on the code;\r\ndeadlines get missed, software breaks in production, and the [results can be\r\ndisastrous][bugresult].\r\n\r\n[bugresult]: http://www5.in.tum.de/~huckle/bugse.html\r\n\r\nRecommended reading:\r\n\r\n* [The Pragmatic Programmer](http://pragprog.com/book/tpp/the-pragmatic-programmer)\r\n  by Dave Thomas &amp; Andy Hunt\r\n* [Code Complete](http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670)\r\n  by Steve McConnell\r\n* [Clean Code](http://www.amazon.com/gp/product/0132350882)\r\n  by Robert C. Martin\r\n* [The Clean Coder](http://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073)\r\n  by Robert C. Martin\r\n* [Refactoring](http://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672)\r\n  by Martin Fowler, et al.\r\n\r\n### A great environment\r\n\r\n#### A great editor\r\n\r\nYou need an editor that will allow you to be fast, and will integrate with\r\nyour environment.  You probably don't need an IDE, but I won't stop you.  I\r\nrecommend any of the following editors:\r\n\r\n* [TextMate](http://macromates.com/)\r\n* [Sublime Text](http://www.sublimetext.com/)\r\n* [Vim](http://www.vim.org/)\r\n* [Emacs](http://www.gnu.org/software/emacs/)\r\n\r\nIf you're using a command-line editor like Vim or Emacs, I recommend you also\r\nlook at a terminal multiplexer like [tmux][tmux].\r\n\r\n[tmux]: http://tmux.sourceforge.net/\r\n\r\n#### Web Browser(s)\r\n\r\nYou'll need at least one web browser (probably more).  As of this writing, I\r\nrecommend [Google Chrome][google_chrome].  Check out any or all of the\r\nfollowing:\r\n\r\n* [Google Chrome][google_chrome]\r\n* [Mozilla Firefox](http://firefox.com)\r\n* [Internet Explorer](http://windows.microsoft.com/en-us/internet-explorer/download-ie)\r\n* [Multiple IE](http://tredosoft.com/Multiple_IE) for running older versions\r\n  of IE\r\n* [Safari](http://support.apple.com/downloads/#safari)\r\n* [XCode](https://developer.apple.com/xcode/)\r\n* [Android SDK](http://developer.android.com/sdk/index.html)\r\n\r\n[google_chrome]: https://www.google.com/intl/en/chrome/browser/\r\n\r\n##### Mobile Browser Testing\r\n\r\nYou'll need to test your sites &amp; applications on mobile platforms.  If you\r\nhave a smartphone, obviously, you can use that; for other platforms, check out\r\n[Testing a Mobile Website on Mac OS X][testing_mobile_macos].  On Windows,\r\nyou'll need to set up the Android SDK for testing, and you can emulate the iOS\r\nversion of Safari via the desktop version for Windows, as per\r\n[this StackOverflow answer][safari_windows_SO].\r\n\r\n[testing_mobile_macos]: http://fynydd.com/blog/tech/testing-a-mobile-website-on-mac-os-x/\r\n[safari_windows_SO]: http://stackoverflow.com/questions/3882233/iphone-browser-simulator-for-windows\r\n\r\n#### Virtualization software\r\n\r\nYou might need to load other operating systems occasionally for testing.\r\nCheck out [VirtualBox](https://www.virtualbox.org/).\r\n\r\n#### Source Control\r\n\r\nYou need something to manage your source code, and I don't mean your\r\nfilesystem.  Even if you are a single developer, source control can save your\r\nbutt.  If you're on a team, it will also help you with merging code and should\r\ninform deployment as well.  Check out a DVCS like:\r\n\r\n* [Git](http://git-scm.com/)\r\n* [Mercurial](http://mercurial.selenic.com/)\r\n\r\n### A frontend mentor\r\n\r\nThis guide is a curriculum, and you can use it on your own.  However, I have\r\nfound that I learn best when I have someone who can help me when I get stuck,\r\nwho can point out what I can't see, and who can fill in the gaps in my code.\r\nFind another experienced frontend developer to help you learn.\r\n\r\n## Basic Outline\r\n\r\n* Basic HTML\r\n* Basic CSS\r\n* JavaScript\r\n  - Functions\r\n  - Scope\r\n  - Constructors & Prototypes\r\n  - Built-in Libraries\r\n  - The Bad Parts\r\n* Browser Object Model\r\n* Document Object Model\r\n* Cross-browser gotchas\r\n* Modular Development\r\n* Testing Tools\r\n* Common JavaScript Libraries\r\n* CoffeeScript\r\n* Sass/Compass/LESS\r\n* Haml/Slim\r\n* MV* Framework(s)\r\n\r\n# Reading List\r\n\r\n## Markup\r\n\r\n* [HTML Dog HTML Tutorials](http://www.htmldog.com/guides/html/)\r\n* [Dive Into HTML5](http://diveintohtml5.info/)\r\n\r\n## Styling\r\n\r\n### CSS\r\n\r\n* [CSS Basics](http://www.cssbasics.com/)\r\n* [HTML Dog CSS Tutorials](http://www.htmldog.com/guides/css/)\r\n* [CSS3 Quick Reference](http://media.smashingmagazine.com/wp-content/uploads/images/css3-cheat-sheet/css3-cheat-sheet.pdf)\r\n* [CSS Systems](http://clearleft.s3.amazonaws.com/2008/cssSystems_notes_small.pdf)\r\n* [SMACSS Book](http://smacss.com/book/)\r\n\r\n#### CSS PreProcessors\r\n* [Sass-Lang.com](http://sass-lang.com/)\r\n* [Sass Tutorial](http://sass-lang.com/tutorial.html)\r\n* [Sass API Reference](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html)\r\n* [LessCSS](http://lesscss.org/)\r\n\r\n## Scripting\r\n\r\n### JavaScript\r\n\r\n* [JavaScript Enlightenment](http://www.javascriptenlightenment.com/JavaScript_Enlightenment.pdf)\r\n* Essential JavaScript Design Patterns\r\n    [HTML](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)\r\n    [PDF](https://github.com/addyosmani/essential-js-design-patterns/blob/1.5.2/formats/essential-js-dp.pdf?raw=true)\r\n* [Eloquent JavaScript](http://eloquentjavascript.net/)\r\n* [JavaScript Garden](http://bonsaiden.github.io/JavaScript-Garden/)\r\n* [10 Things I learned from the jQuery source](http://www.paulirish.com/2010/10-things-i-learned-from-the-jquery-source/)\r\n\r\n### CoffeeScript\r\n\r\n* [CoffeeScript.org](http://coffeescript.org/)\r\n* [The Little Book on CoffeeScript](http://arcturo.github.io/library/coffeescript/)\r\n* [CoffeeScript Cookbook](http://coffeescriptcookbook.com/)\r\n* [Smooth CoffeeScript](http://autotelicum.github.io/Smooth-CoffeeScript/)\r\n* [Testing with CoffeeScript](https://efendibooks.com/minibooks/testing-with-coffeescript)\r\n* [CoffeeScript Ristretto](http://ristrettolo.gy/)\r\n\r\n### DOM Manipulation\r\n\r\n* [DOM Enlightenment](http://domenlightenment.com/)\r\n\r\n### jQuery\r\n\r\n* [jQuery Fundamentals](http://jqfundamentals.com/)\r\n* [jQuery API docs](http://api.jquery.com/)\r\n* [Using jQuery Core](http://learn.jquery.com/using-jquery-core/)\r\n* [Try jQuery](http://try.jquery.com/)\r\n* [jQuery Succinctly](http://www.syncfusion.com/resources/techportal/ebooks/jquery)\r\n\r\n\r\n### Single-page Apps\r\n\r\n* [Patterns for Large-Scale JavaScript Application Architecture](http://addyosmani.com/largescalejavascript/)\r\n* [Backbone Fundamentals](https://github.com/addyosmani/backbone-fundamentals/blob/gh-pages/backbone-fundamentals.pdf?raw=true)\r\n* [Single page apps in depth](http://singlepageappbook.com/index.html)\r\n\r\n#### MV* Frameworks\r\n\r\n* [TodoMVC](http://todomvc.com/) is a collection of simple todo-apps written\r\n  using a handful of JavaScript MV* frameworks,\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}